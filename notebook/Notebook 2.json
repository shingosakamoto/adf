{
	"name": "Notebook 2",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "sparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/bdefa1d2-8d31-405f-95eb-542cf4f22770/resourceGroups/todaysprivate/providers/Microsoft.Synapse/workspaces/privatesynapse/bigDataPools/sparkpool",
				"name": "sparkpool",
				"type": "Spark",
				"endpoint": "https://privatesynapse.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/sparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://todayscontainer@todaysprivate.dfs.core.windows.net/csv/OrderHistory*.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					"##, header=True\r\n",
					")\r\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"default.YourTableName\")"
				],
				"attachments": null,
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df1 = df.withColumnRenamed(\"_c0\",\"Order_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c1\",\"Line_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c2\",\"Qty\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c3\",\"Amount\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c4\",\"Price_List\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c5\",\"Group\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c6\",\"Group_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c7\",\"Sub_Group\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c8\",\"Sub_Group_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c9\",\"Division\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c10\",\"Division_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c11\",\"Sub_Division\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c12\",\"Sub_Division_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c13\",\"Department\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c14\",\"Department_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c15\",\"Sales_Rep\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c16\",\"Sales_Rep_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c17\",\"Product_Line_Group\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c18\",\"Product_Line_Group_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c19\",\"Product_Line\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c20\",\"Product_Line_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c21\",\"Product_Level_2\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c22\",\"Product_Level_2_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c23\",\"Product_Level_3\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c24\",\"Product_Level_3_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c25\",\"Product_Level_4\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c26\",\"Product_Level_4_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c27\",\"Merchandise_Group\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c28\",\"Merchandise_Group_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c29\",\"Merchandise\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c30\",\"Merchandise_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c31\",\"Bill_to\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c32\",\"Bill_to_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c33\",\"Sell_to\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c34\",\"Sell_to_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c35\",\"Ship_to\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c36\",\"Ship_to_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c37\",\"Ordered_Date\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c38\",\"Cust_PO_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c39\",\"EDI_PO_Line_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c40\",\"Warehouse\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c41\",\"Warehouse_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c42\",\"SO_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c43\",\"Order_Source\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c44\",\"Order_Type\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c45\",\"Sales_Admin\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c46\",\"COA_Product\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c47\",\"COA_Product_Nm\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c48\",\"Status\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c49\",\"Merchandise_Set\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c50\",\"Merchandise_NmSet\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c51\",\"SC\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c52\",\"UOM_Comp\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c53\",\"RSD\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c54\",\"RDD\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c55\",\"PSD\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c56\",\"PDD\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c57\",\"Cancel_Delivery_Limit\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c58\",\"Cancel_Ship_Limit\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c59\",\"Hold_Date\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c60\",\"Sent_to_DC\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c61\",\"Ship_Date\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c62\",\"Inv_Date\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c63\",\"Inv_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c64\",\"Pay_Term\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c65\",\"System\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c66\",\"Type\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c67\",\"ETA\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c68\",\"Container\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c69\",\"Impt_Inv_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c70\",\"DO-SO_No\")\r\n",
					"df1 = df1.withColumnRenamed(\"_c71\",\"ETA_Qty\")\r\n",
					""
				],
				"attachments": null,
				"execution_count": 15
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df.show()"
				],
				"attachments": null,
				"execution_count": 10
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": true
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://todayscontainer@todaysprivate.dfs.core.windows.net/csv/Master 2019 - V1.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					"##, header=True\r\n",
					")\r\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"default.Master\")"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df1.write.format(\"parquet\").save(\"order_parquet\")"
				],
				"attachments": null,
				"execution_count": 16
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df1.show()"
				],
				"attachments": null,
				"execution_count": 18
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df.write.format(\"csv\").save(\"master_csv\")"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": true
				},
				"source": [
					"%%pyspark\r\n",
					"df2 = spark.read.load(\"master_parquet\", format='parquet')"
				],
				"attachments": null,
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df2.show()"
				],
				"attachments": null,
				"execution_count": 7
			}
		]
	}
}